<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAHQSAAB0EgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAVGJsCEROAGRITiScSE5UnEhKdJxIQpCcSEKgnEhCrJxIQricRELAeEA+mCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqL1AgV9vxEHabklCVq2KSNq
        1iPp7/0g+ObXJd60kDCziXYuYU5qKho9lxUQE3xABgYm4gUFKfAFBDPwBQQ68AUEQfAFBEbwBAVJ8AQG
        S/AFBlPpBwhhzQ8SpG8RFrcPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClLtKAnickAFE
        VdYCJ0HsHiY973xWT+q9hGXjmlc37HIsJ+9FFSLvHhMl7wcYOtwPEnlpAAAA/wEBDf8CABf/AgAf/wIB
        Jf8BBCv/AQcv/wEIMf8BBzH/AQcy/wIHPf4GC1zkEBatPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAAAH///+AAAAAAH///wAAAAAAP//8AAAAAAAP//gAAAAIAA
        f/8AAAAAwAA//gABAADgAB/4AAcAAPAAD/AADwAA+AAH4AAfAAD+AAPAAD8AAP8AAYAAfwAA/4AAAAD/
        AAD/wAAAAf8AAP/gAAAH/wAA//AAAA//AAD/+AAAH/8AAP/8AAA//wAA//4AAH//AAD//gAD//8AAP/+
        AAP//wAA//wAAH//AAD/8AAAP/8AAP/gAAAf/wAA/8AAAA//AAD/gAAAB/8AAP4AAAAD/wAA/AABAAH/
        AAD4AAcAAP8AAPAAB4AAfwAA4AAPwAA/AACAAD/gAB8AAAAAP/AADwAAAAD/+AAHAAAAAf/8AAcAAAAH
        //8ABwAAAB///4AHAAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>